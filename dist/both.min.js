/*
 *  both - v0.2.0
 *  detects in real time user interaction type (Mouse or Touch) and switches linked events
 *  https://github.com/idomusha/both
 *
 *  Made by idomusha
 *  Under MIT License
 */
!function(a,b){var c,d={defaults:{types:[],device:"",touch:!1,mouse:!1,key:!1,oHandlersData:[],jHandlersData:{},iViewportWidth:1024,iInterval:200,debug:!1},options:{},settings:{},init:function(){this.settings=b.extend({},this.defaults,this.options),c=this.settings,c.debug&&log("##################### init()"),"mobile"==c.device||"tablet"==c.device?this.set("touch",!0):this.set("mouse",!0),c.oHandlersData={mouse:[],touch:[],key:[]},this.bindUIActions()},bindUIActions:function(){c.debug&&log("##################### bindUIActions()");var a,e;b(document).on("mousemove",function(b){return e?void(e=!1):void(c.types.indexOf("mouse")>-1||(c.debug&&log(">>> mousemove"),"undefined"!=typeof a&&clearTimeout(a),a=setTimeout(function(){c.debug&&log(">>> movewait"),d.set("mouse",b),d.handleInteractionTypeChange(b)},c.iInterval)))}),b(document).on("touchstart",function(a){c.types.indexOf("touch")>-1||(c.debug&&log(">>> touchstart"),d.set("touch",a),d.handleInteractionTypeChange(a),e=!0)})},define:function(a){c.debug&&log("##################### define()");var d=null;if("undefined"!=typeof a)return"object"==typeof a&&null!==a?d=a:"string"==typeof a&&(d=b(a)),d},set:function(a){"mouse"==a?(b("html").removeClass("touch").addClass("mouse"),c.touch=!1,c.mouse=!0,d.array.add(c.types,"mouse"),d.array.remove(c.types,"touch")):"touch"==a&&(b("html").removeClass("mouse").addClass("touch"),c.touch=!0,c.mouse=!1,d.array.add(c.types,"touch"),d.array.remove(c.types,"mouse"))},start:function(){d.handleInteractionTypeChange(!0)},handleInteractionTypeChange:function(a){var b="boolean"==typeof a&&a?"is setted":"has changed";c.debug&&log("---------------------------------------------------"),c.debug&&log("Interaction type "+b+": "+c.types.toString()),c.debug&&log("---------------------------------------------------"),d["switch"]()},store:function(a,b,d,e){c.debug&&log("##################### store()"),c.debug&&log("- context",a),c.debug&&log("- selector",b),c.debug&&log("- event",d),c.debug&&log("- handler",e),c.oHandlersData[a].push({selector:b,event:d,handler:e}),c.debug&&log("s.oHandlersData",c.oHandlersData)},"switch":function(){c.debug&&log("##################### switch()");var a={on:c.types.indexOf("mouse")>-1?"mouse":"touch",off:c.types.indexOf("mouse")>-1?"touch":"mouse"};_type="mouse"in c.types?"mouse":"touch",c.debug&&log(c.types),d.on(a.on),d.off(a.off)},on:function(a){c.debug&&log("##################### on()");for(var b=0;b<c.oHandlersData[a].length;b++){var d={selector:c.oHandlersData[a][b].selector,event:c.oHandlersData[a][b].event,handler:c.oHandlersData[a][b].handler};d.selector.on(d.event,d.handler)}},off:function(a){c.debug&&log("##################### off()");for(var b=0;b<c.oHandlersData[a].length;b++){var d={selector:c.oHandlersData[a][b].selector,event:c.oHandlersData[a][b].event,handler:c.oHandlersData[a][b].handler};d.selector.off(d.event,d.handler)}},array:{add:function(a,b){c.debug&&log("##################### array.add()"),a.push(b)},remove:function(a,b){c.debug&&log("##################### array.remove()");var d=a.indexOf(b);d>-1&&a.splice(d,1)}},object:{add:function(a,b,d){return c.debug&&log("##################### object.add()"),void 0!=this.collection[b]?void 0:(this.collection[b]=d,++this.count)},remove:function(a,b){return c.debug&&log("##################### object.remove()"),void 0==this.collection[b]?void 0:(delete this.collection[b],--this.count)},iterate:function(a){for(var b in a)a.hasOwnProperty(b)&&("object"==typeof a[b]?d.iterate(a[b]):console.log(b+"   "+a[b]))},get:function(a,b){c.debug&&log("##################### object.get()");for(var b in a)if(a.hasOwnProperty(b))return a[b]}},destroy:function(){c.debug&&log("##################### destroy()"),b.removeData(d.get(0))},refresh:function(){c.debug&&log("##################### refresh()"),d.destroy(),d.init()}};a.Both=d}(window,jQuery);